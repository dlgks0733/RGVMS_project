<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mis.mapper.ReviewMapper">

<insert id="insert">
	INSERT INTO TBL_REVIEW(REVIEW_NO
						 , PRODUCT_NAME
						 , PRODUCT_PRICE
						 , RATING
						 , GOOD_THING
						 , BAD_THING
						 , USID)
	VALUES(SEQ_REVIEW.NEXTVAL
		 , #{productName}
		 , #{productPrice}
		 , #{rating}
		 , #{goodThing}
		 , #{badThing}
		 , #{usid})
</insert>

<update id="update">
	UPDATE TBL_REVIEW
	   SET PRODUCT_NAME = #{productName}
	   	 , PRODUCT_PRICE = #{productPrice}
	   	 , RATING = #{rating}
	   	 , GOOD_THING = #{goodThing}
	   	 , BAD_THING = #{badThing}
	 WHERE REVIEW_NO = #{reviewNo}
</update>

<delete id="delete">
	DELETE FROM TBL_REVIEW WHERE REVIEW_NO = #{reviewNo}
</delete>

<select id="select" resultType="com.mis.domain.ReviewVO">
	SELECT * FROM TBL_REVIEW WHERE REVIEW_NO = #{reviewNo}
</select>


<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and PRODUCT_NAME like '%' || #{keyword} || '%'
			</if>
			<if test="searchType == 'g'.toString()">
				and GOOD_THING like '%' || #{keyword} || '%'
			</if>
			<if test="searchType == 'b'.toString()">
				and BAD_THING like '%' || #{keyword} || '%'
			</if>
			<if test="searchType == 'gb'.toString()">
				and ( GOOD_THING like '%' || #{keyword} || '%' OR BAD_THING like
				'%' ||
				#{keyword} || '%')
			</if>
			<!-- <if test="searchType == 'cw'.toString()">
				and ( content like '%' || #{keyword} || '%' OR writer
				like '%' ||
				#{keyword} || '%')
			</if>
			<if test="searchType == 'tcw'.toString()">
				and ( title like '%' || #{keyword} || '%'
				OR
				content like
				'%' || #{keyword} || '%'
				OR
				writer like '%' || #{keyword} || '%')
			</if> -->
		</if>
	</sql>



	<select id="listSearch" resultType="com.mis.domain.ReviewVO">
<![CDATA[  
select * from(
  select rownum rnum, REVIEW_NO, PRODUCT_NAME, PRODUCT_PRICE, RATING, GOOD_THING, BAD_THING, REGDATE, USID from (
  select 
   REVIEW_NO, PRODUCT_NAME, PRODUCT_PRICE, RATING, GOOD_THING, BAD_THING, REGDATE, USID 
  from 
  TBL_REVIEW where REVIEW_NO > 0 
]]>
		<include refid="search"></include>

		order by REVIEW_NO desc, REGDATE desc
  
<![CDATA[    
 )) where (rnum >= #{pageStart} AND rnum <= #{pageEnd}) 
order by REVIEW_NO desc, REGDATE desc
]]>

	</select>

	<select id="listSearchCount" resultType="int">
<![CDATA[  
  select count(REVIEW_NO) 
  from TBL_REVIEW 
  where REVIEW_NO > 0 
]]>
		<include refid="search"></include>

	</select>

</mapper>
